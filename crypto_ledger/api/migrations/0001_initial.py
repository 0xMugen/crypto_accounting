# Generated by Django 4.2.1 on 2023-08-01 08:55

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Crypto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('MATIC', 'Polygon'), ('USDT', 'Tether'), ('USDC', 'USD Coin'), ('BNB', 'Binance Coin'), ('ADA', 'Cardano'), ('DOGE', 'Dogecoin'), ('DOT', 'Polkadot'), ('UNI', 'Uniswap'), ('LINK', 'Chainlink'), ('LTC', 'Litecoin'), ('BCH', 'Bitcoin Cash'), ('SOL', 'Solana'), ('XLM', 'Stellar'), ('MATIC', 'Polygon')], max_length=20, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExchangeAPIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.CharField(choices=[('BINANCE', 'Binance'), ('KRAKEN', 'Kraken'), ('COINBASE', 'Coinbase')], max_length=20)),
                ('api_key', models.CharField(max_length=500)),
                ('api_secret', models.CharField(max_length=500)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'verbose_name': 'User API Key',
                'verbose_name_plural': 'User API Keys',
            },
        ),
        migrations.CreateModel(
            name='Ledgers',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('exchange', models.CharField(choices=[('BINANCE', 'Binance'), ('KRAKEN', 'Kraken'), ('COINBASE', 'Coinbase')], max_length=20)),
                ('file', models.FileField(upload_to='ledgers/')),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ledgers', to='api.exchangeapikey')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('done', 'Done')], default='pending', max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound')], max_length=3)),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('ledgers', models.ManyToManyField(to='api.ledgers')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubReports',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('MATIC', 'Polygon'), ('USDT', 'Tether'), ('USDC', 'USD Coin'), ('BNB', 'Binance Coin'), ('ADA', 'Cardano'), ('DOGE', 'Dogecoin'), ('DOT', 'Polkadot'), ('UNI', 'Uniswap'), ('LINK', 'Chainlink'), ('LTC', 'Litecoin'), ('BCH', 'Bitcoin Cash'), ('SOL', 'Solana'), ('XLM', 'Stellar'), ('MATIC', 'Polygon')], max_length=8)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.reports')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wallets',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('blockchain', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('MATIC', 'Polygon')], max_length=8)),
                ('address', models.CharField(max_length=42)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField()),
                ('blockchain', models.CharField(blank=True, choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('MATIC', 'Polygon')], max_length=8, null=True)),
                ('source', models.CharField(max_length=42)),
                ('exchange', models.CharField(blank=True, max_length=20, null=True)),
                ('asset', models.CharField(blank=True, max_length=30, null=True)),
                ('fee', models.DecimalField(blank=True, decimal_places=18, max_digits=30, null=True)),
                ('refid', models.CharField(blank=True, max_length=25, null=True)),
                ('isError', models.BooleanField(default=False)),
                ('gas', models.IntegerField(blank=True, null=True)),
                ('gasfee', models.DecimalField(blank=True, decimal_places=20, max_digits=38, null=True)),
                ('gasToCurrency', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('asset_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('average_buy_price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('appreciation', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True)),
                ('sender', models.CharField(blank=True, max_length=42, null=True)),
                ('receiver', models.CharField(blank=True, max_length=42, null=True)),
                ('hash', models.CharField(blank=True, max_length=66, null=True)),
                ('block_number', models.IntegerField(blank=True, null=True)),
                ('tx_type', models.CharField(blank=True, choices=[('INNER', 'Inner'), ('OUTER', 'Outer'), ('INTERNAL', 'Internal')], max_length=30, null=True)),
                ('is_transfer', models.BooleanField(default=False)),
                ('time', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=20, max_digits=38)),
                ('balance', models.DecimalField(blank=True, decimal_places=20, max_digits=38, null=True)),
                ('total_balance', models.DecimalField(blank=True, decimal_places=20, max_digits=38, null=True)),
                ('transaction_type', models.CharField(blank=True, max_length=30, null=True)),
                ('is_erc', models.BooleanField(default=False)),
                ('token_name', models.CharField(blank=True, max_length=30, null=True)),
                ('token_symbol', models.CharField(blank=True, max_length=30, null=True)),
                ('token_decimal', models.IntegerField(blank=True, null=True)),
                ('ledger', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.ledgers')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.reports')),
                ('sub_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subreports')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionExchangeBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('exchange', models.CharField(choices=[('BINANCE', 'Binance'), ('KRAKEN', 'Kraken'), ('COINBASE', 'Coinbase')], max_length=20)),
                ('balance', models.DecimalField(decimal_places=18, max_digits=20)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.transactions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='reports',
            name='wallets',
            field=models.ManyToManyField(to='api.wallets'),
        ),
        migrations.CreateModel(
            name='LedgerSort',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order', models.PositiveIntegerField()),
                ('refid', models.CharField(max_length=25)),
                ('source', models.CharField(max_length=42)),
                ('time', models.DateTimeField()),
                ('asset', models.CharField(max_length=20)),
                ('transaction_type', models.CharField(max_length=20)),
                ('fee', models.DecimalField(decimal_places=18, max_digits=23)),
                ('balance', models.DecimalField(decimal_places=18, max_digits=23)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=23)),
                ('ledger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ledgers')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailyClosingPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('closing_price', models.DecimalField(decimal_places=2, max_digits=30)),
                ('crypto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.crypto')),
            ],
            options={
                'verbose_name': 'Daily Closing Price',
                'verbose_name_plural': 'Daily Closing Prices',
                'unique_together': {('crypto', 'date')},
            },
        ),
    ]
